// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetCriteriaCollectionData, GetCriteriaCollectionResponses, GetCriteriaCollectionErrors, GetContinentCollectionData, GetContinentCollectionResponses, GetContinentCollectionErrors, GetCountryCollectionData, GetCountryCollectionResponses, GetCountryCollectionErrors, GetRegionCollectionData, GetRegionCollectionResponses, GetRegionCollectionErrors, GetMemberGroupCollectionData, GetMemberGroupCollectionResponses, GetMemberGroupCollectionErrors, GetMemberProfileFieldCollectionData, GetMemberProfileFieldCollectionResponses, GetMemberProfileFieldCollectionErrors, GetMemberTypeCollectionData, GetMemberTypeCollectionResponses, GetMemberTypeCollectionErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class CriteriaService {
    public static getCriteriaCollection<ThrowOnError extends boolean = true>(options?: Options<GetCriteriaCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetCriteriaCollectionResponses, GetCriteriaCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/criteria',
            ...options
        });
    }
}

export class GeoLocationService {
    public static getContinentCollection<ThrowOnError extends boolean = true>(options?: Options<GetContinentCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetContinentCollectionResponses, GetContinentCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/continent',
            ...options
        });
    }
    
    public static getCountryCollection<ThrowOnError extends boolean = true>(options?: Options<GetCountryCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetCountryCollectionResponses, GetCountryCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/country',
            ...options
        });
    }
    
    public static getRegionCollection<ThrowOnError extends boolean = true>(options: Options<GetRegionCollectionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetRegionCollectionResponses, GetRegionCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/country/{countryCode}/region',
            ...options
        });
    }
}

export class MemberService {
    public static getMemberGroupCollection<ThrowOnError extends boolean = true>(options?: Options<GetMemberGroupCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetMemberGroupCollectionResponses, GetMemberGroupCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/member-group',
            ...options
        });
    }
    
    public static getMemberProfileFieldCollection<ThrowOnError extends boolean = true>(options?: Options<GetMemberProfileFieldCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetMemberProfileFieldCollectionResponses, GetMemberProfileFieldCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/member-profile-field',
            ...options
        });
    }
    
    public static getMemberTypeCollection<ThrowOnError extends boolean = true>(options?: Options<GetMemberTypeCollectionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetMemberTypeCollectionResponses, GetMemberTypeCollectionErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/personalisation-groups/management/api/v1/member-type',
            ...options
        });
    }
}