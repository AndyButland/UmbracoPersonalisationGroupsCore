// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetCriteriaCollectionResponse, GetContinentCollectionResponse, GetCountryCollectionData, GetCountryCollectionResponse, GetRegionCollectionData, GetRegionCollectionResponse, GetMemberGroupCollectionResponse, GetMemberProfileFieldCollectionResponse, GetMemberTypeCollectionResponse } from './types.gen';

export class CriteriaService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getCriteriaCollection(): CancelablePromise<GetCriteriaCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/criteria',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
}

export class GeoLocationService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getContinentCollection(): CancelablePromise<GetContinentCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/continent',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.withRegionsOnly
     * @returns unknown OK
     * @throws ApiError
     */
    public static getCountryCollection(data: GetCountryCollectionData = {}): CancelablePromise<GetCountryCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/country',
            query: {
                withRegionsOnly: data.withRegionsOnly
            },
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.countryCode
     * @returns unknown OK
     * @throws ApiError
     */
    public static getRegionCollection(data: GetRegionCollectionData): CancelablePromise<GetRegionCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/country/{countryCode}/region',
            path: {
                countryCode: data.countryCode
            },
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
}

export class MemberService {
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getMemberGroupCollection(): CancelablePromise<GetMemberGroupCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/member-group',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getMemberProfileFieldCollection(): CancelablePromise<GetMemberProfileFieldCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/member-profile-field',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getMemberTypeCollection(): CancelablePromise<GetMemberTypeCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/personalisation-groups/management/api/v1/member-type',
            errors: {
                401: 'The resource is protected and requires an authentication token'
            }
        });
    }
    
}