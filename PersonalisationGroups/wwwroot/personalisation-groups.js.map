{"version":3,"file":"personalisation-groups.js","sources":["../Client/generated/core/ApiError.ts","../Client/generated/core/CancelablePromise.ts","../Client/generated/core/OpenAPI.ts","../Client/generated/core/request.ts","../Client/generated/services.gen.ts","../Client/src/property-editor/group-definition/manifests.ts","../Client/src/property-editor/manifests.ts","../Client/src/translator/day-of-week-definition-detail.translator.ts","../Client/src/translator/manifests.ts","../Client/src/property-editor/group-definition/group-definition-property-editor.element.ts","../Client/src/property-editor/group-definition/group-definition-input.element.ts","../Client/src/index.ts"],"sourcesContent":["import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tappend(key, value.toISOString());\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\tresolve(options, config.TOKEN),\n\t\tresolve(options, config.USERNAME),\n\t\tresolve(options, config.PASSWORD),\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? responseBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { GetCollectionResponse } from './types.gen';\n\nexport class CriteriaService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getCollection(): CancelablePromise<GetCollectionResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/personalisation-groups/management/api/v1/criteria',\n            errors: {\n                401: 'The resource is protected and requires an authentication token'\n            }\n        });\n    }\n    \n}","import type { ManifestPropertyEditorUi } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nexport const propertyEditorUiManifest: ManifestPropertyEditorUi = {\r\n\ttype: 'propertyEditorUi',\r\n\talias: 'PersonalisationGroups.PropertyEditorUi.GroupDefinition',\r\n\tname: 'Personalisation Group Definition Editor',\r\n\tjs: () => import('./group-definition-property-editor.element'),\r\n\tmeta: {\r\n\t\tlabel: 'Personalisation Group Definition Editor',\r\n\t\tpropertyEditorSchemaAlias: 'PersonalisationGroups.GroupDefinition',\r\n\t\ticon: 'icon-operator',\r\n\t\tgroup: 'personalisation'\r\n\t},\r\n};\r\n","import { propertyEditorUiManifest as groupDefinitionPropertyEditorUiManifest } from './group-definition/manifests.js';\r\n\r\nexport const manifests = [\r\n  groupDefinitionPropertyEditorUiManifest,\r\n];\r\n","import { PersonalisationGroupDefinitionDetailTranslatorApi } from \"./translator.interface.js\";\r\n\r\nexport class DayOfWeekDefinitionDetailTranslator implements PersonalisationGroupDefinitionDetailTranslatorApi  {\r\n   translate(definition: string) {\r\n\t\treturn \"TRANSLATED\";\r\n\t\tlet translation = \"\";\r\n\t\tif (definition) {\r\n\t\t\t\tvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\t\t\t\tvar selectedDays = JSON.parse(definition);\r\n\r\n\t\t\t\tfor (var i = 0; i < selectedDays.length; i++) {\r\n\t\t\t\t\t\tif (translation.length > 0) {\r\n\t\t\t\t\t\t\t\ttranslation += \", \";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttranslation += days[selectedDays[i] - 1];\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn translation;\r\n  }\r\n\r\n  destroy() {\r\n  }\r\n}","import type { ManifestPersonalisationGroupDefinitionDetailTranslator } from \"./translator.interface.js\";\r\nimport {\r\n  DayOfWeekDefinitionDetailTranslator,\r\n} from \"./index.js\";\r\n\r\nexport const manifests: Array<ManifestPersonalisationGroupDefinitionDetailTranslator> = [\r\n  {\r\n    type: \"PersonalisationGroupDetailDefinitionTranslator\",\r\n    alias: \"PersonalisationGroup.DefinitionDetailTranslator.DayOfWeek\",\r\n    name: \"Day Of Week Translator\",\r\n    criteriaAlias: \"dayOfWeek\",\r\n    api: DayOfWeekDefinitionDetailTranslator,\r\n  }\r\n];\r\n","import {\r\n  html,\r\n  customElement,\r\n  property,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport type { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { PersonalisationGroup } from \"../../types\";\r\nimport PersonalisationGroupDefinitionInput from \"./group-definition-input.element\";\r\n\r\nconst elementName = \"personalisation-group-definition-property-editor\";\r\n\r\n@customElement(elementName)\r\nexport class PersonalisationGroupDefinitionPropertyUiElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n\r\n  @property({ type: Object })\r\n  value:\r\n      | PersonalisationGroup\r\n      | undefined = undefined;\r\n\r\n  #onChange(event: CustomEvent) {\r\n    this.value = (event.target as PersonalisationGroupDefinitionInput).value;\r\n    this.dispatchEvent(new CustomEvent('property-value-change'));\r\n}\r\n\r\nrender() {\r\n  return html`<personalisation-group-definition-input\r\n    @change=\"${this.#onChange}\"\r\n    .value=\"${this.value ?? {}}\"></personalisation-group-definition-input>`;\r\n  }\r\n\r\n}\r\n\r\nexport default PersonalisationGroupDefinitionPropertyUiElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t[elementName]: PersonalisationGroupDefinitionPropertyUiElement;\r\n\t}\r\n}\r\n","import { customElement, html, property, state, until, when } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { PersonalisationGroup, PersonalisationGroupDetail } from \"../../types\";\r\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { UUISelectEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { tryExecute } from \"@umbraco-cms/backoffice/resources\";\r\nimport { CriteriaDto, CriteriaService } from \"@personalisationgroups/generated\";\r\nimport { umbExtensionsRegistry } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { ManifestPersonalisationGroupDefinitionDetailTranslator, PersonalisationGroupDefinitionDetailTranslatorApi } from \"../../translator/translator.interface\";\r\nimport { loadManifestApi } from \"@umbraco-cms/backoffice/extension-api\";\r\n\r\nconst elementName = \"personalisation-group-definition-input\";\r\n\r\n@customElement(elementName)\r\nexport class PersonalisationGroupDefinitionInput extends UmbLitElement {\r\n\r\n    @property({ attribute: false })\r\n    set value(data: PersonalisationGroup) {\r\n        // Need to create a new object here, as the incoming one is immutable.\r\n        this.#value = {\r\n            match: data.match ?? \"All\",\r\n            duration: data.duration ?? \"Page\",\r\n            score: data.score ?? 50,\r\n            details: data.details ? [...data.details] : []\r\n        };\r\n    }\r\n\r\n    get value() {\r\n        return this.#value;\r\n    }\r\n\r\n    #value: PersonalisationGroup = { match: \"All\", duration: \"Page\", score: 50, details: [] };\r\n\r\n    @state()\r\n    private _availableCriteria: Array<CriteriaDto> = [];\r\n\r\n    @state()\r\n    private _selectedCriteria?: CriteriaDto = undefined;\r\n\r\n    #translators: Array<ManifestPersonalisationGroupDefinitionDetailTranslator> = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#translators = umbExtensionsRegistry.getAllExtensions()\r\n            .filter(e => e.type === \"PersonalisationGroupDetailDefinitionTranslator\")\r\n            .map(mt => mt as ManifestPersonalisationGroupDefinitionDetailTranslator);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        super.connectedCallback();\r\n        await this.#getAvailableCriteria();\r\n    }\r\n\r\n    async #getAvailableCriteria() {\r\n        const { data } = await tryExecute(CriteriaService.getCollection());\r\n        this._availableCriteria = data || [];\r\n        this._selectedCriteria = this._availableCriteria.length > 0\r\n            ? this._availableCriteria[0]\r\n            : undefined;\r\n    }\r\n\r\n    #getCriteriaName(alias: string) {\r\n        var criteria = this.#getCriteriaByAlias(alias);\r\n        if (criteria) {\r\n            return criteria.name;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    #getCriteriaByAlias(alias: string) {\r\n        if (this._availableCriteria === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return this._availableCriteria.find(c => c.alias === alias);\r\n    }\r\n\r\n    #getMatchOptions() {\r\n        return [{\r\n            name: \"All\",\r\n            value: \"All\",\r\n            selected: this.#value.match === \"All\",\r\n        },\r\n        {\r\n            name: \"Any\",\r\n            value: \"Any\",\r\n            selected: this.#value.match === \"Any\",\r\n        }];\r\n    }\r\n\r\n    #onMatchChange(e: UUISelectEvent) {\r\n        this.#value.match = e.target.value.toString();\r\n        this.#dispatchChangeEvent();\r\n    }\r\n\r\n    #getDurationOptions() {\r\n        return [{\r\n            name: \"Per page request\",\r\n            value: \"Page\",\r\n            selected: this.#value.duration === \"Page\",\r\n        },\r\n        {\r\n            name: \"Per session\",\r\n            value: \"Session\",\r\n            selected: this.#value.duration === \"Session\",\r\n        },\r\n        {\r\n            name: \"Per visitor\",\r\n            value: \"Visitor\",\r\n            selected: this.#value.duration === \"Visitor\",\r\n        }];\r\n    }\r\n\r\n    #onDurationChange(e: UUISelectEvent) {\r\n        this.#value.duration = e.target.value.toString();\r\n        this.#dispatchChangeEvent();\r\n    }\r\n\r\n    #getAvailableCriteriaOptions() {\r\n        return this._availableCriteria?.map((c) => {\r\n            return {\r\n                name: c.name,\r\n                value: c.alias,\r\n                selected: c.alias === this._selectedCriteria?.alias,\r\n            }\r\n        }) ?? [];\r\n    }\r\n\r\n    #onSelectedCriteriaChange(e: UUISelectEvent) {\r\n        const alias = e.target.value.toString();\r\n        this._selectedCriteria = this.#getCriteriaByAlias(alias);\r\n    }\r\n\r\n    #dispatchChangeEvent() {\r\n        this.requestUpdate();\r\n        this.dispatchEvent(\r\n          new CustomEvent(\"change\", { composed: true, bubbles: true })\r\n        );\r\n      }\r\n\r\n    #addCriteria() {\r\n        if (!this._selectedCriteria) {\r\n            return;\r\n        }\r\n\r\n        const newGroupDetail = <PersonalisationGroupDetail>({ alias: this._selectedCriteria?.alias, definition: {} });\r\n        this.#value.details.push(newGroupDetail);\r\n        this.#dispatchChangeEvent();\r\n\r\n        this.#editCriteria(this.#value.details.length - 1);\r\n    }\r\n\r\n    #editCriteria(index: number) {\r\n        console.log(\"edit: \" + index);\r\n    }\r\n\r\n     #removeCriteria(index: number) {\r\n        this.#value.details.splice(index, 1);\r\n        this.#dispatchChangeEvent();\r\n    }\r\n\r\n    async #translateDetailDefinition(detail: PersonalisationGroupDetail) {\r\n        const translator = this.#translators.find(t => t.criteriaAlias === detail.alias);\r\n        if (!translator) {\r\n            return \"\";\r\n        }\r\n\r\n        const api = await loadManifestApi(translator.api);\r\n        if (api) {\r\n          const apiInstance = new api() as PersonalisationGroupDefinitionDetailTranslatorApi;\r\n          if (apiInstance) {\r\n            return apiInstance.translate(detail.definition);\r\n          }\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    render() {\r\n        return html`<div>\r\n\r\n                <div>\r\n                    <label>Match:</label>\r\n                    <uui-select\r\n                        name=\"match\"\r\n                        @change=${this.#onMatchChange}\r\n                        .options=${this.#getMatchOptions()}\r\n                    ></uui-select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Duration:</label>\r\n                    <uui-select\r\n                        name=\"duration\"\r\n                        @change=${this.#onDurationChange}\r\n                        .options=${this.#getDurationOptions()}\r\n                    ></uui-select>\r\n                    <div class=\"help-inline\">\r\n                        <span>Determines for how long a user that is matched to a personalisation group remains in it</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Score:</label>\r\n                    <input type=\"number\" min=\"0\" max=\"100\" step=\"1\" value=\"${this.#value.score ?? 50}\" />\r\n                    <div class=\"help-inline\">\r\n                        <span>A number between 1 and 100, can be used to weight groups when scoring the visitor's match to a piece of content</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Add Criteria:</label>\r\n                    <div class=\"controls controls-row\">\r\n                        <uui-select\r\n                            name=\"criteria\"\r\n                            @change=${this.#onSelectedCriteriaChange}\r\n                            .options=${this.#getAvailableCriteriaOptions()}\r\n                        ></uui-select>\r\n                        <button type=\"button\" @click=${this.#addCriteria}>Add</button>\r\n                        ${when(this._selectedCriteria,\r\n                            () => html`\r\n                                <div class=\"help-inline\">\r\n                                    <span>${this._selectedCriteria!.description}</span>\r\n                                </div>`)}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Criteria</th>\r\n                            <th>Definition</th>\r\n                            <td></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${this.#value.details.map((detail: PersonalisationGroupDetail, index: number) =>\r\n                            html`<tr>\r\n                                <td>${this.#getCriteriaName(detail.alias)}</td>\r\n                                <td>\r\n                                    ${until(\r\n                                        this.#translateDetailDefinition(detail).then((t) => html`${t}`),\r\n                                        html``,\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" @click=${() => this.#editCriteria(index)}>Edit</button>\r\n                                    <button type=\"button\" @click=${() => this.#removeCriteria(index)}>Delete</button>\r\n                                </td>\r\n                            </tr>`\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>`;\r\n    }\r\n}\r\n\r\nexport default PersonalisationGroupDefinitionInput;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        [elementName]: PersonalisationGroupDefinitionInput;\r\n    }\r\n}","import type { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\r\nimport { OpenAPI } from \"../generated/index.js\";\r\nimport { manifests as propertyEditorManifests } from \"./property-editor/manifests.js\";\r\nimport { manifests as translatorManifests } from \"./translator/manifests.js\";\r\nimport { ManifestTypes } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport * from \"./property-editor/index.js\";\r\nexport * from \"./translator/index.js\";\r\n\r\nconst manifests: Array<ManifestTypes> = [\r\n  ...propertyEditorManifests,\r\n  ...translatorManifests,\r\n];\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n  extensionRegistry.registerMany(manifests);\r\n\r\n  _host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n    if (!auth) return;\r\n\r\n    const umbOpenApi = auth.getOpenApiConfiguration();\r\n    OpenAPI.BASE = umbOpenApi.base;\r\n    OpenAPI.TOKEN = umbOpenApi.token;\r\n    OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n  });\r\n};\r\n"],"names":["ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","config","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","CriteriaService","__request","propertyEditorUiManifest","groupDefinitionPropertyEditor_element","manifests","groupDefinitionPropertyEditorUiManifest","DayOfWeekDefinitionDetailTranslator","definition","_PersonalisationGroupDefinitionPropertyUiElement_instances","onChange_fn","elementName","PersonalisationGroupDefinitionPropertyUiElement","UmbLitElement","__privateAdd","html","__privateMethod","event","__decorateClass","property","customElement","PersonalisationGroupDefinitionPropertyUiElement$1","_value","_translators","_PersonalisationGroupDefinitionInput_instances","getAvailableCriteria_fn","getCriteriaName_fn","getCriteriaByAlias_fn","getMatchOptions_fn","onMatchChange_fn","getDurationOptions_fn","onDurationChange_fn","getAvailableCriteriaOptions_fn","onSelectedCriteriaChange_fn","dispatchChangeEvent_fn","addCriteria_fn","editCriteria_fn","removeCriteria_fn","translateDetailDefinition_fn","PersonalisationGroupDefinitionInput","__privateSet","umbExtensionsRegistry","e","mt","data","__privateGet","when","detail","until","t","tryExecute","alias","criteria","c","newGroupDetail","translator","api","loadManifestApi","apiInstance","state","propertyEditorManifests","translatorManifests","onInit","_host","extensionRegistry","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":"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"}